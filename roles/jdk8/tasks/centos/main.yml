- name: " {{ ansible_distribution }} | Make sure the build required packages are installed"
  yum:
    pkg: "{{item}}"
    state: present
  with_items: "{{ build_required_packages }}"
  become: yes
  tags:
    - installation

- name: " {{ ansible_distribution }} | hg clone from {{ hg_repo }} --> {{ hg_revision }}"
  hg:
    repo: "{{ hg_repo }}"
    dest: "{{ installed_openjdk_home }}"
    revision: "{{ hg_revision }}"
    force: yes
  when: 
    - hg_repo is defined 
    - hg_revision is defined 
  become: yes
  tags:
    - installation

- name: "{{ ansible_distribution }} | set permission to get_source.sh "
  file:
    path: "{{ installed_openjdk_home }}/get_source.sh"
    mode: 0755
  when: 
    - hg_repo is defined 
    - hg_revision is defined 
  become: yes
  tags:
    - installation

- name: "{{ ansible_distribution }} | get_source.sh "
  shell: "./get_source.sh"
  args:
    chdir: "{{ installed_openjdk_home }}"
    executable: /bin/bash
  when: 
    - hg_repo is defined 
    - hg_revision is defined 
  become: yes
  tags:
    - installation

- name: " {{ ansible_distribution }} | Git clone from {{ git_repo }} --> {{ git_branch }}"
  git:
    repo: "{{ git_repo }}"
    dest: "{{ installed_openjdk_home }}"
    version: "{{ git_branch }}"
    depth: 1
    force: yes
  when: 
    - git_repo is defined 
    - git_branch is defined 
  become: yes
  tags:
    - installation

- name: "{{ ansible_distribution }} | set permission to configure "
  file:
    path: "{{ installed_openjdk_home }}/configure"
    mode: 0755
  become: yes
  tags:
    - installation

- name: "{{ ansible_distribution }} | configure openjdk project "
  shell: "./configure --with-target-bits={{ configure_target_bits }} --with-debug-level={{ configure_debug_level }} --with-jdk-variant={{ configure_jdk_variant }} --with-jvm-variants={{ configure_jvm_variants }} --with-user-release-suffix={{ released_jvm_name }} --with-build-number={{ released_build_number }} --enable-ccache  --with-boot-jdk-jvmargs='-Xlint:deprecation -Xlint:unchecked' 2>&1 | tee /tmp/configure_openjdk8.log"
  args:
    chdir: "{{ installed_openjdk_home }}"
    executable: /bin/bash
  become: yes
  tags:
    - installation

- name: "{{ ansible_distribution }} | clean openjdk images "
  shell: "make clean CONF=linux-x86_64-{{ configure_jdk_variant }}-{{ configure_jvm_variants }}-{{ configure_debug_level }}"
  ignore_error: yes
  args:
    chdir: "{{ installed_openjdk_home }}"
    executable: /bin/bash
  become: yes
  tags:
    - installation

- name: "{{ ansible_distribution }} | make openjdk images "
  shell: "make images CONF=linux-x86_64-{{ configure_jdk_variant }}-{{ configure_jvm_variants }}-{{ configure_debug_level }}"
  args:
    chdir: "{{ installed_openjdk_home }}"
    executable: /bin/bash
  become: yes
  tags:
    - installation

- name: "{{ ansible_distribution }} | show built java version "
  shell: "build/linux-x86_64-{{ configure_jdk_variant }}-{{ configure_jvm_variants }}-{{ configure_debug_level }}/jdk/bin/java -XX:+UnlockExperimentalVMOptions -XX:+UnlockDiagnosticVMOptions -XX:+PrintFlagsFinal -version"
  args:
    chdir: "{{ installed_openjdk_home }}"
    executable: /bin/bash
  become: yes
  tags:
    - installation
